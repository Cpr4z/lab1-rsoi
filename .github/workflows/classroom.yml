name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Check if image exists
        id: check-image
        run: |
          EXISTS=$(docker manifest inspect cpr4z/lab1-disp:latest > /dev/null && echo "yes" || echo "no")
          echo "EXISTING_IMAGE=$EXISTS" >> $GITHUB_ENV
      - name: Build and Push Docker Image
        if: env.EXISTING_IMAGE == 'no'
        run: |
          docker build -t cpr4z/lab1-disp:latest .
          docker push cpr4z/lab1-disp:latest

      - name: Copy code to Yandex VM
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ~/app
      - name: Transfer files to Yandex VM
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > id_ed25519
          chmod 600 id_ed25519
          scp -o StrictHostKeyChecking=no -i id_ed25519 -r ./* ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:~/app
          rm id_ed25519


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Yandex VM
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            docker pull cpr4z/lab1-disp
            docker-compose -f docker-compose.yml up -d --build

  unit_tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Build and upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: ./build
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: ./build

      - name: run_unit_tests
        run: |
          cd build/person_backend/unit_tests
          chmod +x persons_ut
          ./persons_ut

  autograding:
      name: Autograding
      runs-on: ubuntu-latest
      needs: deploy
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Run API Tests
          uses: matt-ball/newman-action@master
          with:
            collection: postman/[inst] Lab1.postman_collection.json
            environment: postman/[inst][heroku] Lab1.postman_environment.json
            delayRequest: 100
            reporters: '[ "cli" ]'

        - name: Autograding
          uses: education/autograding@v1
          continue-on-error: true